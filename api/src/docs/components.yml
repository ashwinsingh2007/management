components:
    schemas:
        Users:
            type: object
            properties:
                id:
                    type: number
                email:
                    type: string
                    format: email
                name:
                    type: string
                role:
                    type: string
                created_date_time:
                    type: date
                modified_date_time:
                    type: date
            example:
                id: 1
                email: fake@example.com
                name: fake name
                role: user
                created_date_time: 2021-02-10T13:38:36.231Z
                modified_date_time: 2021-02-10T13:38:36.231Z

        Role:
            type: object
            properties:
                id:
                    type: number
                name:
                    type: string
                description:
                    type: string
                created_date_time:
                    type: date
                modified_date_time:
                    type: date
            example:
                id: 1
                name: admin
                description: admin
                created_date_time: 2021-02-10T13:38:36.231Z
                modified_date_time: 2021-02-10T13:38:36.231Z

        Token:
            type: object
            properties:
                token:
                    type: string
                expires:
                    type: string
                    format: number
                    description: miliseconds
            example:
                token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg
                expires: 1616128827324

        AuthTokens:
            type: object
            properties:
                access:
                    $ref: '#/components/schemas/Token'
                refresh:
                    $ref: '#/components/schemas/Token'

        Error:
            type: object
            properties:
                code:
                    type: number
                message:
                    type: string

        Success:
            type: object
            properties:
                success:
                    type: boolean

    responses:
        Sucess:
            description: OK
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Success'
                    example:
                        code: 200
                        message: OK
        DuplicateEmail:
            description: Email already taken
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Error'
                    example:
                        code: 400
                        message: Email already taken
        Unauthorized:
            description: Unauthorized
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Error'
                    example:
                        code: 401
                        message: Please authenticate
        Forbidden:
            description: Forbidden
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Error'
                    example:
                        code: 403
                        message: Forbidden
        NotFound:
            description: Not found
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Error'
                    example:
                        code: 404
                        message: Not found

    securitySchemes:
        bearerAuth:
            type: http
            scheme: bearer
            bearerFormat: JWT